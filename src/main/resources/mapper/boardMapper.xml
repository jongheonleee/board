<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.BoardMapper">
  <select id="count" resultType="int">
    SELECT COUNT(*)
    FROM board
  </select>

  <!-- 게시글 등록 -->
  <insert id="insert" parameterType="com.example.demo.dto.board.BoardFormDto">
    <!-- 등록된 이후에 dto에 bno 저장 -->
    <selectKey keyProperty="bno" resultType="int" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>

    INSERT INTO board(
        cate_code, id, title,
        writer, content, comt,
        reg_date, reg_id, up_date, up_id)
    values (#{cate_code}, #{id}, #{title},
            #{writer}, #{content}, #{comt},
            now(), #{reg_id}, now(), #{up_id});
  </insert>

  <!-- 게시글 조회 -->
  <select id="select" parameterType="int" resultType="com.example.demo.dto.board.BoardFormDto">
    SELECT
        bno, cate_code, id, title,
        writer, view_cnt, reco_cnt,
        not_reco_cnt, content, comt,
        reg_date, reg_id, up_date, up_id
    FROM board
    WHERE bno = #{bno}

  </select>

  <!-- 게시글 카테고리 기반 조회 카운팅 -->
  <select id="countByCategory" parameterType="String" resultType="int">
    SELECT
      COUNT(*)
    FROM board
    WHERE cate_code
    LIKE CONCAT(#{cate_code}, '%')
  </select>


  <!-- 게시글 조회 - 카테고리 -->
  <select id="selectByCategory" parameterType="String" resultType="com.example.demo.dto.board.BoardFormDto">
    SELECT
      bno, cate_code, id, title,
      writer, view_cnt, reco_cnt,
      not_reco_cnt, content, comt,
      reg_date, reg_id, up_date, up_id
    FROM board
    WHERE cate_code
    LIKE CONCAT(#{cate_code}, '%')
    ORDER BY reg_date DESC, bno DESC
  </select>

  <!-- 게시글 검색 & 정렬 조건 기반 카운팅 -->
  <select id="countBySearchCondition" parameterType="com.example.demo.dto.SearchCondition" resultType="int">
    SELECT
      COUNT(*)
    FROM board
    WHERE TRUE

    <!-- 검색 조건 -->
    <choose>
      <when test='searchOption=="T"'>
        AND title LIKE CONCAT('%', #{searchKeyword}, '%')
      </when>
      <when test='searchOption=="W"'>
        AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
      </when>
      <otherwise>
        AND title LIKE CONCAT('%', #{searchKeyword}, '%')
        OR writer LIKE CONCAT('%', #{searchKeyword}, '%')
      </otherwise>
    </choose>
  </select>

  <!-- 게시글 검색 & 정렬 조건 기반 조회 -->
  <select id="selectBySearchCondition" parameterType="com.example.demo.dto.SearchCondition" resultType="com.example.demo.dto.board.BoardFormDto">
    SELECT
      bno, cate_code, id, title,
      writer, view_cnt, reco_cnt,
      not_reco_cnt, content, comt,
      reg_date, reg_id, up_date, up_id
    FROM board
    WHERE TRUE

      <!-- 검색 조건 -->
      <choose>
        <when test='searchOption=="T"'>
          AND title LIKE CONCAT('%', #{searchKeyword}, '%')
        </when>
        <when test='searchOption=="W"'>
          AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
        </when>
        <otherwise>
          AND title LIKE CONCAT('%', #{searchKeyword}, '%')
          OR writer LIKE CONCAT('%', #{searchKeyword}, '%')
        </otherwise>
      </choose>

     <!-- 정렬 조건 -->
    <choose>
      <when test='sortOption == "1"'> <!-- 최신순 -->
        ORDER BY reg_date DESC, bno DESC
      </when>
      <when test='sortOption == "2"'> <!-- 조회수 -->
        ORDER BY view_cnt DESC, bno DESC
      </when>
      <when test='sortOption == "3"'> <!-- 추천순 -->
        ORDER BY reco_cnt DESC, bno DESC
      </when>
      <otherwise> <!-- 기본값, 최신순 -->
        ORDER BY reg_date DESC, bno DESC
      </otherwise>
    </choose>

    LIMIT #{offset}, #{pageSize};
  </select>

  <!-- 게시글 상세 조회 - bno -->
  <select id="selectByBno" parameterType="int" resultMap="BoardDetailResultMap">
    SELECT
      b.bno as bno, b.cate_code as cate_code, b.id as id,
      b.title as title, b.writer as writer, b.view_cnt as view_cnt,
      b.reco_cnt as reco_cnt, b.not_reco_cnt as not_reco_cnt, b.content as content,
      b.comt as comt, b.reg_date as reg_date, b.reg_id as reg_id,
      b.up_date as up_date, b.up_id as up_id,
      i.ino as ino, i.img as img, i.comt as comt, i.name as name,
      c.name as cate_name
    FROM board b
    INNER JOIN image i
    ON b.bno = i.bno
    INNER JOIN category c
    ON b.cate_code = c.cate_code
    WHERE b.bno = #{bno};
  </select>

  <!-- 게시글 상세 조회 - bno 매핑 정보 -->
  <resultMap id="BoardDetailResultMap" type="com.example.demo.dto.board.BoardDetailDto">
    <id property="bno" column="bno" />
    <result property="cate_code" column="cate_code" />
    <result property="id" column="id" />
    <result property="title" column="title" />
    <result property="writer" column="writer" />
    <result property="view_cnt" column="view_cnt" />
    <result property="reco_cnt" column="reco_cnt" />
    <result property="not_reco_cnt" column="not_reco_cnt" />
    <result property="content" column="content" />
    <result property="comt" column="comt" />
    <result property="reg_date" column="reg_date" />
    <result property="reg_id" column="reg_id" />
    <result property="up_date" column="up_date" />
    <result property="up_id" column="up_id" />

    <!-- 카테고리 매핑 -->
    <association property="category" javaType="com.example.demo.dto.board.BoardCategoryDto">
      <result property="cate_code" column="cate_code" />
      <result property="name" column="cate_name" />
    </association>

    <!-- 이미지 여러개 매핑 -->
    <collection property="boardImgs" ofType="com.example.demo.dto.board.BoardImgDto">
      <id property="ino" column="ino" />
      <result property="img" column="img" />
      <result property="comt" column="img_comt" />
      <result property="name" column="name" />
    </collection>
  </resultMap>

  <select id="selectAll" resultType="com.example.demo.dto.board.BoardFormDto">
    SELECT
      bno, cate_code, id, title,
      writer, view_cnt, reco_cnt,
      not_reco_cnt, content, comt,
      reg_date, reg_id, up_date, up_id
    FROM board
    ORDER BY reg_date DESC, bno DESC
  </select>

  <!-- 게시글 수정 -->
  <update id="update" parameterType="com.example.demo.dto.board.BoardFormDto">
    UPDATE board
    SET
        title = #{title}, content = #{content}, comt = #{comt},
        up_date = now(), up_id = #{up_id}
    WHERE bno = #{bno}
  </update>

  <update id="increaseViewCnt" parameterType="int">
    UPDATE board
    SET
        view_cnt = view_cnt + 1
    WHERE bno = #{bno};
  </update>

  <update id="increaseRecoCnt" parameterType="int">
    UPDATE board
    SET
      reco_cnt = reco_cnt + 1
    WHERE bno = #{bno};
  </update>

  <update id="increaseNotRecoCnt" parameterType="int">
    UPDATE board
    SET
      not_reco_cnt = not_reco_cnt + 1
    WHERE bno = #{bno};
  </update>

  <!-- 게시글 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE
    FROM board
    WHERE bno = #{bno}
  </delete>

  <delete id="deleteAll">
    DELETE
    FROM board
  </delete>
</mapper>